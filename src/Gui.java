
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author admin
 */
public class Gui extends javax.swing.JFrame {

//variables
    int fInt = 0;
    String fStr = "";
    int sInt = 0;
    ;
    String sStr = "";
    int tInt = 0;
    ;
    String tStr = "";
    int fourInt = 0;
    String fourStr = "";

    boolean firstPress = false;
    boolean secondPress = false;
    boolean thirdPress = false;
    boolean fourthPress = false;

    public static String PASSWORD;
    public static String LOGIN;
    static String ip;

    Connect connection = new Connect();
    public static Loading loading;

    /**
     * Creates new form COPY
     */
    public Gui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        IpPanel = new javax.swing.JPanel();
        firstOctet = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        secondOctet = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        thirdOctet = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        fourthOctet = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        IpPanel.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        firstOctet.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        firstOctet.setBorder(null);
        firstOctet.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                firstOctetFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                firstOctetFocusLost(evt);
            }
        });
        firstOctet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                firstOctetKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                firstOctetKeyTyped(evt);
            }
        });

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setText(".");
        jLabel1.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel1.setOpaque(true);

        secondOctet.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        secondOctet.setBorder(null);
        secondOctet.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                secondOctetFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                secondOctetFocusLost(evt);
            }
        });
        secondOctet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                secondOctetKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                secondOctetKeyTyped(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setText(".");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel2.setOpaque(true);

        thirdOctet.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        thirdOctet.setBorder(null);
        thirdOctet.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                thirdOctetFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                thirdOctetFocusLost(evt);
            }
        });
        thirdOctet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                thirdOctetKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                thirdOctetKeyTyped(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setText(".");
        jLabel3.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel3.setOpaque(true);

        fourthOctet.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        fourthOctet.setBorder(null);
        fourthOctet.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fourthOctetFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fourthOctetFocusLost(evt);
            }
        });
        fourthOctet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fourthOctetKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                fourthOctetKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout IpPanelLayout = new javax.swing.GroupLayout(IpPanel);
        IpPanel.setLayout(IpPanelLayout);
        IpPanelLayout.setHorizontalGroup(
            IpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IpPanelLayout.createSequentialGroup()
                .addComponent(firstOctet, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel1)
                .addGap(0, 0, 0)
                .addComponent(secondOctet, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(thirdOctet, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(jLabel3)
                .addGap(0, 0, 0)
                .addComponent(fourthOctet, javax.swing.GroupLayout.DEFAULT_SIZE, 22, Short.MAX_VALUE))
        );
        IpPanelLayout.setVerticalGroup(
            IpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IpPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(firstOctet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel1)
                .addComponent(secondOctet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel2)
                .addComponent(thirdOctet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel3)
                .addComponent(fourthOctet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jButton1.setText("GRANT");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("DENY");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Credential");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton3))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(IpPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(39, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(IpPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void firstOctetFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstOctetFocusGained
        firstOctet.setCaretPosition(0);
        firstOctet.selectAll();
    }//GEN-LAST:event_firstOctetFocusGained

    private void firstOctetFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_firstOctetFocusLost
        firstPress = false;
        if (fInt > 0 && fInt < 224) {
        } else {
            firstOctet.setText("");
        }
        if (firstOctet.getText().length() > 1) {
            if (firstOctet.getText().startsWith("0")) {
                firstOctet.setText("");
            }
        }
    }//GEN-LAST:event_firstOctetFocusLost

    private void firstOctetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_firstOctetKeyPressed
        if (evt.getKeyCode() != 16) {
            if (!firstPress) {
                fInt = 0;
                fStr = "";
                firstPress = true;
                firstOctet.setText("");
            }
        }
    }//GEN-LAST:event_firstOctetKeyPressed

    private void firstOctetKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_firstOctetKeyTyped
        char c = evt.getKeyChar();

        if (evt.getKeyChar() == '.') {
            secondOctet.requestFocus();
        }

        if (!(Character.isDigit(c))) {
            evt.consume();
        } else {
            fStr += Character.toString(evt.getKeyChar());
            fInt = Integer.parseInt(fStr);
        }

        if (firstOctet.getText().length() > 2) {
            evt.consume();
        }
    }//GEN-LAST:event_firstOctetKeyTyped

    private void secondOctetFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_secondOctetFocusGained
        secondOctet.setCaretPosition(0);
        secondOctet.selectAll();
    }//GEN-LAST:event_secondOctetFocusGained

    private void secondOctetFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_secondOctetFocusLost
        secondPress = false;
        if (sInt > -1 && sInt < 256) {
        } else {
            secondOctet.setText("");
        }
        if (secondOctet.getText().length() > 1) {
            if (secondOctet.getText().startsWith("0")) {
                secondOctet.setText("");
            }
        }
    }//GEN-LAST:event_secondOctetFocusLost

    private void secondOctetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_secondOctetKeyPressed
        if (evt.getKeyCode() != 16) {
            if (!secondPress) {
                sInt = 0;
                sStr = "";
                secondPress = true;
                secondOctet.setText("");
            }
        }
    }//GEN-LAST:event_secondOctetKeyPressed

    private void secondOctetKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_secondOctetKeyTyped
        char c = evt.getKeyChar();

        if (evt.getKeyChar() == '.') {
            thirdOctet.requestFocus();
        }

        if (!(Character.isDigit(c))) {
            evt.consume();
        } else {
            sStr += Character.toString(evt.getKeyChar());
            sInt = Integer.parseInt(sStr);
        }

        if (secondOctet.getText().length() > 2) {
            evt.consume();
        }
    }//GEN-LAST:event_secondOctetKeyTyped

    private void thirdOctetFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_thirdOctetFocusGained
        thirdOctet.setCaretPosition(0);
        thirdOctet.selectAll();
    }//GEN-LAST:event_thirdOctetFocusGained

    private void thirdOctetFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_thirdOctetFocusLost
        thirdPress = false;
        if (tInt > -1 && tInt < 256) {
        } else {
            thirdOctet.setText("");
        }
        if (thirdOctet.getText().length() > 1) {
            if (thirdOctet.getText().startsWith("0")) {
                thirdOctet.setText("");
            }
        }
    }//GEN-LAST:event_thirdOctetFocusLost

    private void thirdOctetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_thirdOctetKeyPressed
        if (evt.getKeyCode() != 16) {
            if (!thirdPress) {
                tInt = 0;
                tStr = "";
                thirdPress = true;
                thirdOctet.setText("");
            }
        }
    }//GEN-LAST:event_thirdOctetKeyPressed

    private void thirdOctetKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_thirdOctetKeyTyped
        char c = evt.getKeyChar();

        if (evt.getKeyChar() == '.') {
            fourthOctet.requestFocus();
        }

        if (!(Character.isDigit(c))) {
            evt.consume();
        } else {
            tStr += Character.toString(evt.getKeyChar());
            tInt = Integer.parseInt(tStr);
        }

        if (thirdOctet.getText().length() > 2) {
            evt.consume();
        }
    }//GEN-LAST:event_thirdOctetKeyTyped

    private void fourthOctetFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fourthOctetFocusGained
        fourthOctet.setCaretPosition(0);
        fourthOctet.selectAll();
    }//GEN-LAST:event_fourthOctetFocusGained

    private void fourthOctetFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fourthOctetFocusLost
        fourthPress = false;
        if (fourInt > -1 && fourInt < 256) {
        } else {
            fourthOctet.setText("");
        }
        if (fourthOctet.getText().length() > 1) {
            if (fourthOctet.getText().startsWith("0")) {
                fourthOctet.setText("");
            }
        }
    }//GEN-LAST:event_fourthOctetFocusLost

    private void fourthOctetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fourthOctetKeyPressed
        if (evt.getKeyCode() != 16) {
            if (!fourthPress) {
                fourInt = 0;
                fourStr = "";
                fourthPress = true;
                fourthOctet.setText("");
            }
        }
    }//GEN-LAST:event_fourthOctetKeyPressed

    private void fourthOctetKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fourthOctetKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c))) {
            evt.consume();
        } else {
            fourStr += Character.toString(evt.getKeyChar());
            fourInt = Integer.parseInt(fourStr);
        }

        if (fourthOctet.getText().length() > 2) {
            evt.consume();
        }
    }//GEN-LAST:event_fourthOctetKeyTyped

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        Credential crForm = new Credential(this, true);
        crForm.setTitle("Credential");
        crForm.setLocationRelativeTo(this);
        crForm.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (firstOctet.getText().isEmpty() || secondOctet.getText().isEmpty() || thirdOctet.getText().isEmpty() || fourthOctet.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "IP address not specified", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            ip = firstOctet.getText() + "." + secondOctet.getText() + "." + thirdOctet.getText() + "." + fourthOctet.getText();

            Thread thread = new Thread(new Runnable() {
                @Override
                public void run() {
                    connection.connect(LOGIN, PASSWORD);
                }
            });

            loading = new Loading(this, true);
            loading.setLocationRelativeTo(this);
            thread.start();
            loading.setVisible(true);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        if (firstOctet.getText().isEmpty() || secondOctet.getText().isEmpty() || thirdOctet.getText().isEmpty() || fourthOctet.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "IP address not specified", "Warning", JOptionPane.WARNING_MESSAGE);
        } else {
            ip = firstOctet.getText() + "." + secondOctet.getText() + "." + thirdOctet.getText() + "." + fourthOctet.getText();

            Thread thread = new Thread(new Runnable() {
                @Override
                public void run() {
                    connection.denyAction(LOGIN, PASSWORD);
                }
            });

            loading = new Loading(this, true);
            loading.setLocationRelativeTo(this);
            thread.start();
            loading.setVisible(true);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Gui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel IpPanel;
    private javax.swing.JTextField firstOctet;
    private javax.swing.JTextField fourthOctet;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField secondOctet;
    private javax.swing.JTextField thirdOctet;
    // End of variables declaration//GEN-END:variables
}
